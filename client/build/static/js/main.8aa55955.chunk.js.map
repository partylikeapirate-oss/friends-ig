{"version":3,"sources":["components/Nav/index.js","utils/API.js","components/Marker/index.js","pages/LandingPage/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["FawnNav","locationRef","link","window","location","href","className","style","textAlign","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","Component","zip","axios","get","data","number","street","suffix","city","state","Marker","position","backgroundColor","height","width","border","borderRadius","defaultProps","customStyles","content","top","left","right","bottom","marginRight","transform","LandingPage","editModalIsOpen","adminModalIsOpen","finishModalIsOpen","zipCode","zipAddress","streetAddress","houseNumber","zipOptions","showMap","handleInputChange","event","target","name","value","setState","setTimeout","handleInputCheck","handleAddressInput","API","then","res","console","log","zipAddresses","reviewAddresses","catch","err","length","displayZipOptions","City","State","selectOption","i","_id","mapAddress","preventDefault","addressBody","streetSuffix","results","addLong","geometry","lng","addLat","lat","componentDidMount","onAfterOpen","openAdminModal","closeAdminModal","loginAdmin","adminName","adminPassword","document","admin","alert","reRoute","url","background","padding","color","onChange","this","placeholder","onClick","map","zipOption","key","margin","bootstrapURLKeys","defaultCenter","defaultZoom","text","isOpen","afterOpenEditModal","onRequestClose","contentLabel","ariaHideApp","overflow","closeEditModal","Footer","fontSize","App","loadStates","user","quotes","Nav","exact","path","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8aa55955.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Nav from 'react-bootstrap/Nav'\n// import fire from '../../config/Fire';\n\n\nclass FawnNav extends Component {\n\n\n    locationRef = (link) => {\n        window.location.href = link\n    }\n\n    render() {\n        return (\n\n            <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary\" style={{textAlign: 'center'}}>\n\n                <h3 className=\"text-white\" style={{textAlign: 'center'}}>A D D R E S S | Zipcode / Address Lookup Module</h3>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item dropdown\">\n                            <div className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Resources\n                </div>\n                            {/* <!-- Here's the magic. Add the .animate and .slide-in classes to your .dropdown-menu and you're all set! --> */}\n                            <div className=\"dropdown-menu dropdown-menu-right animate slideIn\" aria-labelledby=\"navbarDropdown\">\n                                {/* <div className=\"dropdown-item\">\n                                <button type=\"button\" className=\"btn btn-success\" onClick={this.props.showAdmin}>\n                                    Admin Login</button>\n                                </div>\n                                <div className=\"dropdown-divider\"></div> */}\n\n\n                                <div className=\"dropdown-item\">\n                                    <button type=\"button\" className=\"btn btn-success\" data-toggle=\"modal\"\n                                        data-target=\"#aboutMeModal\">\n                                        About Us</button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n\n\n            </nav>\n        );\n    }\n}\n\nexport default FawnNav;\n","import axios from \"axios\";\n\nexport default {\n  findZip: function(zip) {\n    return axios.get(\"/api/zipcodes/find/\" + zip)\n  },\n  findAddress: function(data) {\n    return axios\n      .get(`https://maps.googleapis.com/maps/api/geocode/json?address=${data.number}+${data.street}+${data.suffix},+${data.city},+${data.state}&key=[API_KEY]`)\n  }\n};\n\n\n// .then(({data: {results} }) => res.json(results))\n// .catch(err => res.status(422).json(err));\n\n// findAddress: function(data) {\n//   return axios.get(\"/maps/geocoder\", data)\n// }","  \nimport React, {Component} from 'react';\n\nexport default class Marker extends Component {\n\n\n  static defaultProps = {};\n\n  render() {\n    return (\n       <div style={{\n           position: 'absolute',\n        //    width: 20,\n        //    height: 20,\n        //    left: -40 / 2,\n        //    top: -40 / 2,\n        //    border: '1px solid red',\n        //    borerRadius: '50%',\n           backgroundColor: 'tomato',\n        //    textAlign: 'center',\n        //    color: 'white',\n        height: '40px',\n        width: '40px',\n        border: '1px',\n        borderRadius: '50%'\n       }}>\n    \n       </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Modal from 'react-modal';\nimport Nav from '../../components/Nav';\nimport API from \"../../utils/API\";\nimport GoogleMapReact from 'google-map-react';\nimport Marker from '../../components/Marker';\n// import PlacesAutocomplete from 'react-places-autocomplete';\n// import { geocodeByAddress, geocodeByPlaceId, getLatLng} from 'react-places-autocomplete';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n}\n\nclass LandingPage extends Component {\n\n    state = {\n        editModalIsOpen: false,\n        adminModalIsOpen: false,\n        finishModalIsOpen: false,\n        zipCode: \"\",\n        zipAddress: [],\n        streetAddress: \"\",\n        houseNumber: \"\",\n        city: \"\",\n        state: \"\",\n        zipOptions: null,\n        showMap: false\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n        setTimeout(() => { this.handleInputCheck() }, 500)\n    };\n\n    handleAddressInput = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleInputCheck = () => {\n\n        API.findZip(this.state.zipCode)\n            .then(res => {\n                console.log(\"Zipcodes Found!\")\n                console.log(res.data)\n                this.setState({\n                    zipAddresses: res.data\n                })\n                setTimeout(() => { this.reviewAddresses() }, 1500)\n            }).catch(err => {\n                console.log(\"No Zipcodes Found\")\n                this.setState({\n                    zipAddresses: \"\",\n                    zipOptions: \"\",\n                    city: \"\",\n                    state: \"\"\n                })\n                console.log(err)\n            })\n\n    }\n\n    reviewAddresses = () => {\n\n        if (this.state.zipAddresses.length > 1) {\n            this.displayZipOptions()\n\n        } else if (this.state.zipAddresses.length === 1) {\n            this.setState({\n                city: this.state.zipAddresses[0].City,\n                state: this.state.zipAddresses[0].State,\n                zipOptions: \"\"\n            })\n\n        } else {\n            console.log(\"No addresses found, you should NOT see this error\")\n        }\n    }\n\n    displayZipOptions = () => {\n        this.setState({\n            zipOptions: this.state.zipAddresses,\n            city: \"\",\n            state: \"\"\n        })\n    }\n\n    selectOption = (id) => {\n\n        for (var i = 0; i < this.state.zipOptions.length; i++) {\n            if (this.state.zipOptions[i]._id === id) {\n                this.setState({\n                    city: this.state.zipOptions[i].City,\n                    state: this.state.zipOptions[i].State,\n                    zipOptions: \"\"\n                })\n            }\n        }\n\n    }\n\n    mapAddress = (event) => {\n        event.preventDefault();\n        console.log(\"Mapping address: \" + this.state.houseNumber + \" \" + this.state.streetAddress + \" \" + this.state.city + \" \" + this.state.state + \", \" + this.state.zipCode)\n        var addressBody = {\n            number: this.state.houseNumber,\n            street: this.state.streetAddress,\n            suffix: this.state.streetSuffix,\n            city: this.state.city,\n            state: this.state.state,\n            zip: this.state.zip\n        }\n        API.findAddress(addressBody)\n            .then(res => {\n                console.log(res.data.results)\n\n                this.setState({\n                    addLong: res.data.results[0].geometry.location.lng,\n                    addLat: res.data.results[0].geometry.location.lat,\n                    showMap: true\n                })\n\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    componentDidMount = () => {\n        console.log(\"Landing Page\")\n    }\n\n    onAfterOpen = () => {\n        console.log(\"Modal Is Opened\")\n\n    }\n\n\n\n    openAdminModal = () => {\n        this.setState({\n            adminModalIsOpen: true\n        })\n    }\n\n    closeAdminModal = () => {\n        this.setState({\n            adminModalIsOpen: false\n        })\n    }\n\n    // submitRequest = (event) => {\n    //     event.preventDefault();\n\n    //     var requestData = {\n    //         projName: this.state.projectName,\n    //         projDesc: this.state.projectDescription,\n    //         reqName: this.state.requesterName,\n    //         reqEmail: this.state.requesterEmail,\n    //         reqPhone: this.state.requesterPhone,\n    //         reqBudget: this.state.requesterBudget,\n    //         projNotes: this.state.projectNotes\n    //     }\n\n    //     console.log(\"You've submitted your request!\")\n    //     console.log(requestData)\n\n    //     API.submitRequest({\n    //         projName: this.state.projectName,\n    //         projDesc: this.state.projectDescription,\n    //         reqName: this.state.requesterName,\n    //         reqEmail: this.state.requesterEmail,\n    //         reqPhone: this.state.requesterPhone,\n    //         reqBudget: this.state.requesterBudget,\n    //         projNotes: this.state.projectNotes\n    //     })\n    //         .then(res => {\n    //             alert(\"Youre request has been submitted!\")\n    //         })\n    //         .catch(err => {\n    //             alert(\"There was a problem processing your request, please make sure all forms are filled out or call 610-299-9918 to speak to Evan\")\n    //         })\n\n    // }\n\n    loginAdmin = (event) => {\n        event.preventDefault()\n        console.log(this.state.adminName)\n        console.log(this.state.adminPassword)\n        if (this.state.adminName === \"evancleary@1creative.com\" && this.state.adminPassword === \"YKi34709\") {\n            document.location.href = '/xbyMGrZ4XIFuk2GiPHta'\n        } else if (this.state.admin !== \"evancleary\" && this.state.adminPassword !== \"YKi34709\") {\n            alert(\"You input the wrong information!\")\n        } else {\n            alert(\"Error\")\n        }\n    }\n\n    reRoute = (url) => {\n        // event.preventDefault();\n\n        window.location.href = url\n    }\n\n\n    render() {\n        return (\n\n            <div className=\"container-fluid\" style={{ background: '#FFF8DC', padding: '0', height: '1600px', color: 'whitesmoke' }}>\n\n\n                <div className=\"row\" style={{ padding: '5%' }}>\n                    <div className=\"col-md-2\"></div>\n                    <div className=\"col-md-8\">\n                        <div className=\"card bg-primary\" style={{ padding: '50px' }}>\n                            <div className=\"card-header\">\n                                <h3>Address Lookup by Zipcode</h3>\n                            </div>\n                            <div className=\"card-body\">\n\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <form>\n                                            <label>Enter Zipcode</label>\n                                            <input type=\"number\" onChange={this.handleInputChange} name=\"zipCode\" value={this.state.zipCode} />\n                                        </form>\n                                    </div>\n\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {this.state.city ?\n                                            <h2>{this.state.city + \", \" + this.state.state}</h2>\n                                            : null}\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {this.state.city ?\n                                            <div className=\"col-12\">\n                                                <form>\n\n                                                    <label>Street Address</label>\n                                                    <div className=\"form-row\">\n                                                 \n                                                        <input style={{width: '20%'}}type=\"text\" onChange={this.handleAddressInput} name=\"houseNumber\" value={this.state.houseNumber} placeholder=\"123\"/>\n                                                  \n                                                        <input style={{width: '60%'}}type=\"text\" onChange={this.handleAddressInput} name=\"streetAddress\" value={this.state.streetAddress} placeholder=\"Main\"/>\n                                                     \n                                                       \n                                                        <input style={{width: '20%'}}type=\"text\" onChange={this.handleAddressInput} name=\"streetSuffix\" value={this.state.streetSuffix} placeholder=\"Street\"/>\n                                                     \n                                                    </div>\n\n                                                    <button onClick={this.mapAddress} className=\"btn btn-warning\">Map It!</button>\n                                                </form>\n\n                                            </div> : null}\n                                    </div>\n                                </div>\n\n                               \n\n                                <div className=\"row\">\n                                    {this.state.zipOptions ?\n                                        <>\n                                            <div className=\"col-12\"><h4>Please select the City you'd like to view</h4></div>\n                                            <>\n                                                {this.state.zipOptions.map(zipOption => (\n                                                    <div className=\"col-lg-3 col-md-6\" key={zipOption._id}>\n                                                        <button style={{ margin: '5px', width: '100%' }} className=\"btn btn-light\" onClick={() => this.selectOption(zipOption._id)}>{zipOption.City}</button>\n                                                    </div>\n                                                ))}\n\n                                            </>\n                                        </>\n\n\n                                        : null}\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\" style={{width: '500px', height: '500px'}}>\n                                        {this.state.showMap ? \n\n                                        <GoogleMapReact\n                                            bootstrapURLKeys={ {key: '[API_KEY]'}}\n                                            defaultCenter={{ lat: 39.952583, lng: -75.165222}}\n                                            defaultZoom={5}\n                                        >\n                                            <Marker lat={this.state.addLat} lng={this.state.addLong} text=\"Address Searched\"/>\n\n                                        </GoogleMapReact>\n                                    \n                                        : null}\n                                    </div>\n                                </div>\n\n                            </div>\n                            <br />\n                        </div>\n\n\n                    </div>\n                    <div className=\"col-md-2\"></div>\n\n\n                </div>\n\n\n\n\n                {/* Admin Login Modal */}\n\n                <Modal\n                    isOpen={this.state.adminModalIsOpen}\n                    onAfterOpen={this.afterOpenEditModal}\n                    onRequestClose={this.closeAdminModal}\n                    style={customStyles}\n                    contentLabel={\"Make your request here!\"}\n                    ariaHideApp={false}\n                >\n                    <div className=\"card\" style={{ overflow: 'auto' }}>\n                        <div className=\"card-header\" style={{ textAlign: 'center' }}>\n                            <h3>--------Admin Login--------</h3>\n                            <button className=\"btn btn-sm btn-secondary\" onClick={this.closeEditModal}>Exit</button>\n                        </div>\n                        <div className=\"card-body\" style={{ height: '500px', overflow: 'auto' }}>\n                            <form>\n                                <label>Username</label>\n                                <br />\n                                <input className=\"form-group\" type=\"text\" value={this.state.adminName} onChange={this.handleInputChange} name=\"adminName\" />\n                                <br />\n\n                                <label>Password</label>\n                                <br />\n                                <input className=\"form-group\" type=\"password\" value={this.state.adminPassword} onChange={this.handleInputChange} name=\"adminPassword\" />\n                                <br />\n\n\n                                <button className=\"btn btn-success\" onClick={this.loginAdmin}>Log In</button>\n\n                            </form>\n\n                        </div>\n\n\n                    </div>\n\n                </Modal>\n            </div >\n\n\n        )\n\n    }\n\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Nav from 'react-bootstrap/Nav'\n// import fire from '../../config/Fire';\n\n\nclass Footer extends Component {\n\n\n    locationRef = (link) => {\n        window.location.href = link\n    }\n\n    render() {\n        return (\n\n            <div className=\"footer\" style={{ width: '100%', height: '100px', backgroundColor: '#00008B', textAlign: 'center' }}>\n                <p style={{ color: 'white', textAlign: 'center', fontSize: '12px', padding: '25px' }}><span><a href=\"https://evancleary.com/\" style={{ color: 'white', fontSize: '12px' }}>ECEnterprises, LLC</a></span></p>\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n// import Button from 'react-bootstrap/Button';\nimport LandingPage from \"./pages/LandingPage\"\nimport Footer from './components/Footer'\nimport Nav from './components/Nav'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      user: \"\",\n      quotes: []\n    }\n  }\n\n  componentDidMount() {\n    this.loadStates();\n\n  }\n\n  loadStates = () => {\n\n    // API.gatherQuotes()\n    //   .then(res => {\n    //     this.setState({\n    //       quotes: res.data\n    //     })\n    //   }).catch(err => {\n    //     console.log(\"error getting quotes\")\n    //   })\n\n  }\n\n\n\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"main\">\n          <Nav />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <LandingPage\n              />\n            </Route>\n          </Switch>\n\n          <Footer />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}